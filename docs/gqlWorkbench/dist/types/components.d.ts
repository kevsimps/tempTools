/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "./stencil-public-runtime";
export namespace Components {
    interface WxccAltair {
    }
    interface WxccAuthDemoWidget {
        "burp": (x: any) => Promise<void>;
        "callbackUrl": string;
    }
    interface WxccAuthWidget {
        "burp": (x: any) => Promise<void>;
        "callbackUrl": string;
    }
    interface WxccGuidePanel {
        "arttitle": string;
        "flip": boolean;
        "lList": string;
        "opened": boolean;
    }
    interface WxccPageControls {
    }
    interface WxccTime {
    }
    interface WxccVideoModal {
        "vidId": string;
    }
}
export interface WxccPageControlsCustomEvent<T> extends CustomEvent<T> {
    detail: T;
    target: HTMLWxccPageControlsElement;
}
declare global {
    interface HTMLWxccAltairElement extends Components.WxccAltair, HTMLStencilElement {
    }
    var HTMLWxccAltairElement: {
        prototype: HTMLWxccAltairElement;
        new (): HTMLWxccAltairElement;
    };
    interface HTMLWxccAuthDemoWidgetElement extends Components.WxccAuthDemoWidget, HTMLStencilElement {
    }
    var HTMLWxccAuthDemoWidgetElement: {
        prototype: HTMLWxccAuthDemoWidgetElement;
        new (): HTMLWxccAuthDemoWidgetElement;
    };
    interface HTMLWxccAuthWidgetElement extends Components.WxccAuthWidget, HTMLStencilElement {
    }
    var HTMLWxccAuthWidgetElement: {
        prototype: HTMLWxccAuthWidgetElement;
        new (): HTMLWxccAuthWidgetElement;
    };
    interface HTMLWxccGuidePanelElement extends Components.WxccGuidePanel, HTMLStencilElement {
    }
    var HTMLWxccGuidePanelElement: {
        prototype: HTMLWxccGuidePanelElement;
        new (): HTMLWxccGuidePanelElement;
    };
    interface HTMLWxccPageControlsElementEventMap {
        "wxccGuidePageTurn": string;
        "toggleGuide": string;
        "wxccTimeWidget": string;
        "wxccAuthPop": string;
        "vidPop": string;
        "vodTog": string;
    }
    interface HTMLWxccPageControlsElement extends Components.WxccPageControls, HTMLStencilElement {
        addEventListener<K extends keyof HTMLWxccPageControlsElementEventMap>(type: K, listener: (this: HTMLWxccPageControlsElement, ev: WxccPageControlsCustomEvent<HTMLWxccPageControlsElementEventMap[K]>) => any, options?: boolean | AddEventListenerOptions): void;
        addEventListener<K extends keyof DocumentEventMap>(type: K, listener: (this: Document, ev: DocumentEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
        addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
        addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
        removeEventListener<K extends keyof HTMLWxccPageControlsElementEventMap>(type: K, listener: (this: HTMLWxccPageControlsElement, ev: WxccPageControlsCustomEvent<HTMLWxccPageControlsElementEventMap[K]>) => any, options?: boolean | EventListenerOptions): void;
        removeEventListener<K extends keyof DocumentEventMap>(type: K, listener: (this: Document, ev: DocumentEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
        removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
        removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
    }
    var HTMLWxccPageControlsElement: {
        prototype: HTMLWxccPageControlsElement;
        new (): HTMLWxccPageControlsElement;
    };
    interface HTMLWxccTimeElement extends Components.WxccTime, HTMLStencilElement {
    }
    var HTMLWxccTimeElement: {
        prototype: HTMLWxccTimeElement;
        new (): HTMLWxccTimeElement;
    };
    interface HTMLWxccVideoModalElement extends Components.WxccVideoModal, HTMLStencilElement {
    }
    var HTMLWxccVideoModalElement: {
        prototype: HTMLWxccVideoModalElement;
        new (): HTMLWxccVideoModalElement;
    };
    interface HTMLElementTagNameMap {
        "wxcc-altair": HTMLWxccAltairElement;
        "wxcc-auth-demo-widget": HTMLWxccAuthDemoWidgetElement;
        "wxcc-auth-widget": HTMLWxccAuthWidgetElement;
        "wxcc-guide-panel": HTMLWxccGuidePanelElement;
        "wxcc-page-controls": HTMLWxccPageControlsElement;
        "wxcc-time": HTMLWxccTimeElement;
        "wxcc-video-modal": HTMLWxccVideoModalElement;
    }
}
declare namespace LocalJSX {
    interface WxccAltair {
    }
    interface WxccAuthDemoWidget {
        "callbackUrl"?: string;
    }
    interface WxccAuthWidget {
        "callbackUrl"?: string;
    }
    interface WxccGuidePanel {
        "arttitle"?: string;
        "flip"?: boolean;
        "lList"?: string;
        "opened"?: boolean;
    }
    interface WxccPageControls {
        "onToggleGuide"?: (event: WxccPageControlsCustomEvent<string>) => void;
        "onVidPop"?: (event: WxccPageControlsCustomEvent<string>) => void;
        "onVodTog"?: (event: WxccPageControlsCustomEvent<string>) => void;
        "onWxccAuthPop"?: (event: WxccPageControlsCustomEvent<string>) => void;
        "onWxccGuidePageTurn"?: (event: WxccPageControlsCustomEvent<string>) => void;
        "onWxccTimeWidget"?: (event: WxccPageControlsCustomEvent<string>) => void;
    }
    interface WxccTime {
    }
    interface WxccVideoModal {
        "vidId"?: string;
    }
    interface IntrinsicElements {
        "wxcc-altair": WxccAltair;
        "wxcc-auth-demo-widget": WxccAuthDemoWidget;
        "wxcc-auth-widget": WxccAuthWidget;
        "wxcc-guide-panel": WxccGuidePanel;
        "wxcc-page-controls": WxccPageControls;
        "wxcc-time": WxccTime;
        "wxcc-video-modal": WxccVideoModal;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "wxcc-altair": LocalJSX.WxccAltair & JSXBase.HTMLAttributes<HTMLWxccAltairElement>;
            "wxcc-auth-demo-widget": LocalJSX.WxccAuthDemoWidget & JSXBase.HTMLAttributes<HTMLWxccAuthDemoWidgetElement>;
            "wxcc-auth-widget": LocalJSX.WxccAuthWidget & JSXBase.HTMLAttributes<HTMLWxccAuthWidgetElement>;
            "wxcc-guide-panel": LocalJSX.WxccGuidePanel & JSXBase.HTMLAttributes<HTMLWxccGuidePanelElement>;
            "wxcc-page-controls": LocalJSX.WxccPageControls & JSXBase.HTMLAttributes<HTMLWxccPageControlsElement>;
            "wxcc-time": LocalJSX.WxccTime & JSXBase.HTMLAttributes<HTMLWxccTimeElement>;
            "wxcc-video-modal": LocalJSX.WxccVideoModal & JSXBase.HTMLAttributes<HTMLWxccVideoModalElement>;
        }
    }
}
